name: CI build

on: [push, workflow_dispatch]

env:
  PP: AD2IoT-Release

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
            submodules: recursive
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: ${{ runner.os }}-pio

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install required packages
        run: sudo apt-get install -y git wget flex bison gperf python3 python3-pip python3-setuptools cmake ninja-build ccache libffi-dev libssl-dev dfu-util libusb-1.0-0

      - name: goto done
        run: exit 1

      - name: Install PlatformIO Core
        run: pip install --upgrade platformio

      - name: Create base Artifact release package structure
        run: |
          mkdir $PP
          cp README.md CHANGELOG.md LICENSE $PP/

      - name: Build esp32-poe-iso
        run: pio run -e esp32-poe-iso

      - name: Build spiffs.bin for esp32-poe-iso
        run: pio run -t buildfs -e esp32-poe-iso

      - name: Add esp32-poe-iso build to release package
        run: |
          mkdir $PP/esp32
          cp contrib/README-FLASH-ESP32.md contrib/ESP32-DOWNLOAD-TOOL-UPLOADING-FIRMWARE.png $PP/esp32/
          mkdir $PP/esp32/esp32-poe-iso-webui
          cp .pio/build/esp32-poe-iso/spiffs.bin $PP/esp32/esp32-poe-iso-webui/
          cp .pio/build/esp32-poe-iso/firmware.bin $PP/esp32/esp32-poe-iso-webui/
          cp .pio/build/esp32-poe-iso/bootloader.bin $PP/esp32/esp32-poe-iso-webui/
          cp .pio/build/esp32-poe-iso/partitions.bin $PP/esp32/esp32-poe-iso-webui/
          cp .pio/build/esp32-poe-iso/ota_data_initial.bin $PP/esp32/esp32-poe-iso-webui/

      - name: Upload firmware package Artifact
        uses: actions/upload-artifact@v3
        with:
          name: AD2IoT-Release-Package
          path: AD2IoT-Release